plugins {
    id 'org.jetbrains.kotlin.js' version '1.5.21'
    id 'io.gitlab.arturbosch.detekt' version '1.18.0'
}

group 'org.olafneumann'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        // used for org.jetbrains:kotlin-extensions
        url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
    implementation "org.jetbrains.kotlinx:kotlinx-html-js:0.7.3"
    implementation "org.jetbrains:kotlin-extensions:1.0.1-pre.156-kotlin-1.5.0"
    implementation "io.ktor:ktor-client-core:1.6.2"
    implementation "io.ktor:ktor-client-js:1.6.2"

    implementation npm("driver.js", "0.9.8")

    testImplementation "org.jetbrains.kotlin:kotlin-test-js"
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = false // activate all available (even unstable) rules.
    // config = files("$projectDir/config/detekt/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    //baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
        sarif.enabled = true // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
    }
}


kotlin {
    js {
        compileKotlinJs.kotlinOptions.moduleKind = "commonjs"
        browser {
            webpackTask {
                cssSupport.enabled = true
            }

            runTask {
                cssSupport.enabled = true
            }

            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
        binaries.executable()
    }
}