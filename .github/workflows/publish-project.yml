name: Build and publish project

on:
  push:
    branches:
      - 'main'

# based https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle
jobs:
  build-project:
    name: "Build project"
    uses: ./.github/workflows/build-project.yml
    with:
      upload_artifacts: true

  publish-site:
    runs-on: ubuntu-latest
    needs: build-site
    name: Publish Site
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: site
          path: build/distributions
      # publish the generated page to github pages
      - name: Deploy Site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/distributions
          cname: regex-generator.olafneumann.org

  build-and-publish-docker:
    runs-on: ubuntu-latest
    needs: build-site
    name: Build and publish Docker images
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get sha_short
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: site
          path: build/distributions
      # generate and publish docker image containing the generated page
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: noxone/regexgenerator:latest,noxone/regexgenerator:${{ steps.date.outputs.date }}_${{ steps.vars.outputs.sha_short }}
